name: On Code Push In Any Branch
on:
  push:
    branches:
      - '*'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build_and_deploy:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the main code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for gh-pages

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # Step 3: Install Maven using Chocolatey
      - name: Install Maven
        run: choco install maven -y

      # Step 4: Install Allure CLI using Chocolatey
      - name: Install Allure CLI
        run: choco install allure -y

      # Step 5: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\.m2\repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 6: Run Tests
      - name: Run Tests
        run: mvn clean test verify

      # Step 7: Build Test Report
      - name: Build test report
        if: always()
        run: |
          allure generate $env:GITHUB_WORKSPACE\reports\allure-results --clean -o allure-history

      # Step 8: Publish Test Report
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      # Step 9: Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            target/
            allure-results/
            reports/
          retention-days: 2